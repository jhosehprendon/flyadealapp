//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://schemas.navitaire.com/WebServices/DataContracts/Utilities", ClrNamespace = "Newskies.UtilitiesManager")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations", ClrNamespace = "Navitaire.WebServices.DataContracts.Common.Enumerations")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://schemas.navitaire.com/WebServices/DataContracts/Common", ClrNamespace = "Navitaire.WebServices.DataContracts.Common")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://schemas.navitaire.com/WebServices/FaultContracts", ClrNamespace = "Navitaire.WebServices.FaultContracts")]
[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://www.navitaire.com/Ncl/Validation/ValidationResult", ClrNamespace = "www.navitaire.com.Ncl.Validation.ValidationResult")]

namespace Newskies.UtilitiesManager
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetSSRListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetSSRListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SSR", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class SSR : object
    {

        

        private bool AllowedField;

        private short BoardingZoneField;

        private string FeeCodeField;

        private bool InActiveField;

        private short LimitPerPassengerField;

        private string NameField;

        private string RuleSetNameField;

        private string SeatMapCodeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.SeatRestriction SeatRestrictionField;

        private string SSRCodeField;

        private string SSRNestCodeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.SSRType SSRTypeField;

        private string TraceQueueCodeField;

        private short UnitValueField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed
        {
            get
            {
                return this.AllowedField;
            }
            set
            {
                this.AllowedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BoardingZone
        {
            get
            {
                return this.BoardingZoneField;
            }
            set
            {
                this.BoardingZoneField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeCode
        {
            get
            {
                return this.FeeCodeField;
            }
            set
            {
                this.FeeCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LimitPerPassenger
        {
            get
            {
                return this.LimitPerPassengerField;
            }
            set
            {
                this.LimitPerPassengerField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleSetName
        {
            get
            {
                return this.RuleSetNameField;
            }
            set
            {
                this.RuleSetNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeatMapCode
        {
            get
            {
                return this.SeatMapCodeField;
            }
            set
            {
                this.SeatMapCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.SeatRestriction SeatRestriction
        {
            get
            {
                return this.SeatRestrictionField;
            }
            set
            {
                this.SeatRestrictionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public string SSRCode
        {
            get
            {
                return this.SSRCodeField;
            }
            set
            {
                this.SSRCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 10)]
        public string SSRNestCode
        {
            get
            {
                return this.SSRNestCodeField;
            }
            set
            {
                this.SSRNestCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.SSRType SSRType
        {
            get
            {
                return this.SSRTypeField;
            }
            set
            {
                this.SSRTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 12)]
        public string TraceQueueCode
        {
            get
            {
                return this.TraceQueueCodeField;
            }
            set
            {
                this.TraceQueueCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
        public short UnitValue
        {
            get
            {
                return this.UnitValueField;
            }
            set
            {
                this.UnitValueField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetDocTypeListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetDocTypeListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DocType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class DocType : object
    {

        

        private string DocTypeCodeField;

        private string TypeNameField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.DocumentType DocumentTypeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.DocRequiredPropertyType DocRequiredPropertyTypeField;

        private bool InActiveField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTypeCode
        {
            get
            {
                return this.DocTypeCodeField;
            }
            set
            {
                this.DocTypeCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName
        {
            get
            {
                return this.TypeNameField;
            }
            set
            {
                this.TypeNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.DocumentType DocumentType
        {
            get
            {
                return this.DocumentTypeField;
            }
            set
            {
                this.DocumentTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.DocRequiredPropertyType DocRequiredPropertyType
        {
            get
            {
                return this.DocRequiredPropertyTypeField;
            }
            set
            {
                this.DocRequiredPropertyTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetFeeListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetFeeListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Fee", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class Fee : object
    {

        

        private bool AllowedField;

        private string FeeCodeField;

        private bool InActiveField;

        private string NameField;

        private string DescriptionField;

        private string DisplayCodeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.FeeType FeeTypeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed
        {
            get
            {
                return this.AllowedField;
            }
            set
            {
                this.AllowedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeCode
        {
            get
            {
                return this.FeeCodeField;
            }
            set
            {
                this.FeeCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public string DisplayCode
        {
            get
            {
                return this.DisplayCodeField;
            }
            set
            {
                this.DisplayCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.FeeType FeeType
        {
            get
            {
                return this.FeeTypeField;
            }
            set
            {
                this.FeeTypeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetSuffixListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetSuffixListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Suffix", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class Suffix : object
    {

        

        private string NameField;

        private bool InActiveField;

        private string SuffixCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string SuffixCode
        {
            get
            {
                return this.SuffixCodeField;
            }
            set
            {
                this.SuffixCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetStationListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetStationListRequestData : object
    {
        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Station", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class Station : object
    {

        

        private bool AllowedField;

        private string CityCodeField;

        private string CountryCodeField;

        private string CultureCodeField;

        private string CurrencyCodeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.WeightType WeightTypeField;

        private bool InActiveField;

        private string LatitudeField;

        private string LongitudeField;

        private string MACCodeField;

        private string NameField;

        private string ProvinceStateCodeField;

        private string ShortNameField;

        private string StationClassField;

        private string StationCodeField;

        private string SubZoneCodeField;

        private string TimeZoneCodeField;

        private string ZoneCodeField;

        private bool ThirdPartyDCSControlledField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed
        {
            get
            {
                return this.AllowedField;
            }
            set
            {
                this.AllowedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode
        {
            get
            {
                return this.CityCodeField;
            }
            set
            {
                this.CityCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode
        {
            get
            {
                return this.CurrencyCodeField;
            }
            set
            {
                this.CurrencyCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.WeightType WeightType
        {
            get
            {
                return this.WeightTypeField;
            }
            set
            {
                this.WeightTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public string Latitude
        {
            get
            {
                return this.LatitudeField;
            }
            set
            {
                this.LatitudeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public string Longitude
        {
            get
            {
                return this.LongitudeField;
            }
            set
            {
                this.LongitudeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public string MACCode
        {
            get
            {
                return this.MACCodeField;
            }
            set
            {
                this.MACCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 10)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
        public string ProvinceStateCode
        {
            get
            {
                return this.ProvinceStateCodeField;
            }
            set
            {
                this.ProvinceStateCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 12)]
        public string ShortName
        {
            get
            {
                return this.ShortNameField;
            }
            set
            {
                this.ShortNameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
        public string StationClass
        {
            get
            {
                return this.StationClassField;
            }
            set
            {
                this.StationClassField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 14)]
        public string StationCode
        {
            get
            {
                return this.StationCodeField;
            }
            set
            {
                this.StationCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
        public string SubZoneCode
        {
            get
            {
                return this.SubZoneCodeField;
            }
            set
            {
                this.SubZoneCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 16)]
        public string TimeZoneCode
        {
            get
            {
                return this.TimeZoneCodeField;
            }
            set
            {
                this.TimeZoneCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 17)]
        public string ZoneCode
        {
            get
            {
                return this.ZoneCodeField;
            }
            set
            {
                this.ZoneCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 18)]
        public bool ThirdPartyDCSControlled
        {
            get
            {
                return this.ThirdPartyDCSControlledField;
            }
            set
            {
                this.ThirdPartyDCSControlledField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetTitleListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetTitleListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Title", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class Title : object
    {

        

        private bool AllowedField;

        private string TitleKeyField;

        private string DescriptionField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.Gender GenderField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.WeightCategory WeightCategoryField;

        private bool InActiveField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed
        {
            get
            {
                return this.AllowedField;
            }
            set
            {
                this.AllowedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleKey
        {
            get
            {
                return this.TitleKeyField;
            }
            set
            {
                this.TitleKeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.Gender Gender
        {
            get
            {
                return this.GenderField;
            }
            set
            {
                this.GenderField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.WeightCategory WeightCategory
        {
            get
            {
                return this.WeightCategoryField;
            }
            set
            {
                this.WeightCategoryField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetProvinceStateListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetProvinceStateListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ProvinceState", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class ProvinceState : object
    {

        

        private string CountryCodeField;

        private string ProvinceStateCodeField;

        private string NameField;

        private bool InActiveField;

        private Newskies.UtilitiesManager.City[] CitiesField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceStateCode
        {
            get
            {
                return this.ProvinceStateCodeField;
            }
            set
            {
                this.ProvinceStateCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Newskies.UtilitiesManager.City[] Cities
        {
            get
            {
                return this.CitiesField;
            }
            set
            {
                this.CitiesField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "City", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class City : object
    {

        

        private string CountryCodeField;

        private string ProvinceStateCodeField;

        private string NameField;

        private bool InActiveField;

        private string CityCodeField;

        private string ShortNameField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceStateCode
        {
            get
            {
                return this.ProvinceStateCodeField;
            }
            set
            {
                this.ProvinceStateCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public string CityCode
        {
            get
            {
                return this.CityCodeField;
            }
            set
            {
                this.CityCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public string ShortName
        {
            get
            {
                return this.ShortNameField;
            }
            set
            {
                this.ShortNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetPaymentMethodsListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetPaymentMethodsListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PaymentMethod", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class PaymentMethod : object
    {

        

        private bool AllowedField;

        private bool AllowDepositField;

        private bool AllowZeroAmountField;

        private bool CommissionableField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.DCCType DCCTypeField;

        private bool DisallowPartialRefundField;

        private string FeeCodeField;

        private bool InActiveField;

        private short MaxInstallmentsField;

        private string NameField;

        private string PaymentMethodCodeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentMethodType PaymentMethodTypeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentRefundType PaymentRefundTypeField;

        private bool ProportionalRefundField;

        private bool RefundableByAgentField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.RefundCurrencyControl RefundCurrencyControlField;

        private short RestrictionHoursField;

        private bool SystemControlledField;

        private bool ValidationRequiredField;

        private Newskies.UtilitiesManager.PaymentMethodField[] PaymentMethodFieldsField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed
        {
            get
            {
                return this.AllowedField;
            }
            set
            {
                this.AllowedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public bool AllowDeposit
        {
            get
            {
                return this.AllowDepositField;
            }
            set
            {
                this.AllowDepositField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public bool AllowZeroAmount
        {
            get
            {
                return this.AllowZeroAmountField;
            }
            set
            {
                this.AllowZeroAmountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public bool Commissionable
        {
            get
            {
                return this.CommissionableField;
            }
            set
            {
                this.CommissionableField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.DCCType DCCType
        {
            get
            {
                return this.DCCTypeField;
            }
            set
            {
                this.DCCTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public bool DisallowPartialRefund
        {
            get
            {
                return this.DisallowPartialRefundField;
            }
            set
            {
                this.DisallowPartialRefundField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public string FeeCode
        {
            get
            {
                return this.FeeCodeField;
            }
            set
            {
                this.FeeCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public short MaxInstallments
        {
            get
            {
                return this.MaxInstallmentsField;
            }
            set
            {
                this.MaxInstallmentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 10)]
        public string PaymentMethodCode
        {
            get
            {
                return this.PaymentMethodCodeField;
            }
            set
            {
                this.PaymentMethodCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentMethodType PaymentMethodType
        {
            get
            {
                return this.PaymentMethodTypeField;
            }
            set
            {
                this.PaymentMethodTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 12)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentRefundType PaymentRefundType
        {
            get
            {
                return this.PaymentRefundTypeField;
            }
            set
            {
                this.PaymentRefundTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
        public bool ProportionalRefund
        {
            get
            {
                return this.ProportionalRefundField;
            }
            set
            {
                this.ProportionalRefundField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 14)]
        public bool RefundableByAgent
        {
            get
            {
                return this.RefundableByAgentField;
            }
            set
            {
                this.RefundableByAgentField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.RefundCurrencyControl RefundCurrencyControl
        {
            get
            {
                return this.RefundCurrencyControlField;
            }
            set
            {
                this.RefundCurrencyControlField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 16)]
        public short RestrictionHours
        {
            get
            {
                return this.RestrictionHoursField;
            }
            set
            {
                this.RestrictionHoursField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 17)]
        public bool SystemControlled
        {
            get
            {
                return this.SystemControlledField;
            }
            set
            {
                this.SystemControlledField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 18)]
        public bool ValidationRequired
        {
            get
            {
                return this.ValidationRequiredField;
            }
            set
            {
                this.ValidationRequiredField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 19)]
        public Newskies.UtilitiesManager.PaymentMethodField[] PaymentMethodFields
        {
            get
            {
                return this.PaymentMethodFieldsField;
            }
            set
            {
                this.PaymentMethodFieldsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PaymentMethodField", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class PaymentMethodField : object
    {

        

        private Navitaire.WebServices.DataContracts.Common.Enumerations.BookingPaymentField BookingPaymentFieldField;

        private string FieldCodeField;

        private string NameField;

        private short OrdinalField;

        private string PaymentMethodCodeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentMethodType PaymentMethodTypeField;

        private bool PersistDataField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentUIState RefundUIStateField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.RequiredType RequiredTypeField;

        private short ValueMaxLengthField;

        private short ValueMinLengthField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.FieldValueType ValueTypeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.BookingPaymentField BookingPaymentField
        {
            get
            {
                return this.BookingPaymentFieldField;
            }
            set
            {
                this.BookingPaymentFieldField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldCode
        {
            get
            {
                return this.FieldCodeField;
            }
            set
            {
                this.FieldCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Ordinal
        {
            get
            {
                return this.OrdinalField;
            }
            set
            {
                this.OrdinalField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMethodCode
        {
            get
            {
                return this.PaymentMethodCodeField;
            }
            set
            {
                this.PaymentMethodCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentMethodType PaymentMethodType
        {
            get
            {
                return this.PaymentMethodTypeField;
            }
            set
            {
                this.PaymentMethodTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PersistData
        {
            get
            {
                return this.PersistDataField;
            }
            set
            {
                this.PersistDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentUIState RefundUIState
        {
            get
            {
                return this.RefundUIStateField;
            }
            set
            {
                this.RefundUIStateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.RequiredType RequiredType
        {
            get
            {
                return this.RequiredTypeField;
            }
            set
            {
                this.RequiredTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ValueMaxLength
        {
            get
            {
                return this.ValueMaxLengthField;
            }
            set
            {
                this.ValueMaxLengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ValueMinLength
        {
            get
            {
                return this.ValueMinLengthField;
            }
            set
            {
                this.ValueMinLengthField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.FieldValueType ValueType
        {
            get
            {
                return this.ValueTypeField;
            }
            set
            {
                this.ValueTypeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetCountryListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetCountryListRequestData : object
    {

        

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Country", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class Country : object
    {

        

        private string CountryCodeField;

        private bool HasProvinceStatesField;

        private string NameField;

        private bool InActiveField;

        private string CountryCode3CField;

        private string DefaultCurrencyCodeField;

        private bool APISRequiredOutboundField;

        private bool APISRequiredInboundField;

        private bool APPSRequiredOutboundField;

        private bool APPSRequiredInboundField;

        private bool APISCheckDocumentsField;

        private bool AqqRequiredField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.PaxAddressRequirement PaxAddressRequirementField;

        private Newskies.UtilitiesManager.City[] CitiesField;

        private Newskies.UtilitiesManager.ProvinceState[] ProvinceStatesField;

        private Newskies.UtilitiesManager.CountryDocType[] CountryDocTypesField;

        private string TicketingCurrencyCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasProvinceStates
        {
            get
            {
                return this.HasProvinceStatesField;
            }
            set
            {
                this.HasProvinceStatesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public string CountryCode3C
        {
            get
            {
                return this.CountryCode3CField;
            }
            set
            {
                this.CountryCode3CField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public string DefaultCurrencyCode
        {
            get
            {
                return this.DefaultCurrencyCodeField;
            }
            set
            {
                this.DefaultCurrencyCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public bool APISRequiredOutbound
        {
            get
            {
                return this.APISRequiredOutboundField;
            }
            set
            {
                this.APISRequiredOutboundField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public bool APISRequiredInbound
        {
            get
            {
                return this.APISRequiredInboundField;
            }
            set
            {
                this.APISRequiredInboundField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public bool APPSRequiredOutbound
        {
            get
            {
                return this.APPSRequiredOutboundField;
            }
            set
            {
                this.APPSRequiredOutboundField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public bool APPSRequiredInbound
        {
            get
            {
                return this.APPSRequiredInboundField;
            }
            set
            {
                this.APPSRequiredInboundField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 10)]
        public bool APISCheckDocuments
        {
            get
            {
                return this.APISCheckDocumentsField;
            }
            set
            {
                this.APISCheckDocumentsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 11)]
        public bool AqqRequired
        {
            get
            {
                return this.AqqRequiredField;
            }
            set
            {
                this.AqqRequiredField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 12)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.PaxAddressRequirement PaxAddressRequirement
        {
            get
            {
                return this.PaxAddressRequirementField;
            }
            set
            {
                this.PaxAddressRequirementField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 13)]
        public Newskies.UtilitiesManager.City[] Cities
        {
            get
            {
                return this.CitiesField;
            }
            set
            {
                this.CitiesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 14)]
        public Newskies.UtilitiesManager.ProvinceState[] ProvinceStates
        {
            get
            {
                return this.ProvinceStatesField;
            }
            set
            {
                this.ProvinceStatesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 15)]
        public Newskies.UtilitiesManager.CountryDocType[] CountryDocTypes
        {
            get
            {
                return this.CountryDocTypesField;
            }
            set
            {
                this.CountryDocTypesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 16)]
        public string TicketingCurrencyCode
        {
            get
            {
                return this.TicketingCurrencyCodeField;
            }
            set
            {
                this.TicketingCurrencyCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "CountryDocType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class CountryDocType : object
    {

        

        private string CountryCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode
        {
            get
            {
                return this.CountryCodeField;
            }
            set
            {
                this.CountryCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetExternalRatesListResponseData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetExternalRatesListResponseData : object
    {

        

        private Newskies.UtilitiesManager.ExternalRate[] ExternalRateListField;

        private Newskies.UtilitiesManager.ValidationError[] ValidationErrorListField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Newskies.UtilitiesManager.ExternalRate[] ExternalRateList
        {
            get
            {
                return this.ExternalRateListField;
            }
            set
            {
                this.ExternalRateListField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Newskies.UtilitiesManager.ValidationError[] ValidationErrorList
        {
            get
            {
                return this.ValidationErrorListField;
            }
            set
            {
                this.ValidationErrorListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ExternalRate", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class ExternalRate : object
    {

        

        private string RateIDField;

        private decimal ExchangeRateField;

        private string QuotedCurrencyField;

        private string CollectedCurrencyField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateID
        {
            get
            {
                return this.RateIDField;
            }
            set
            {
                this.RateIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public decimal ExchangeRate
        {
            get
            {
                return this.ExchangeRateField;
            }
            set
            {
                this.ExchangeRateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string QuotedCurrency
        {
            get
            {
                return this.QuotedCurrencyField;
            }
            set
            {
                this.QuotedCurrencyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public string CollectedCurrency
        {
            get
            {
                return this.CollectedCurrencyField;
            }
            set
            {
                this.CollectedCurrencyField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ValidationError", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class ValidationError : object
    {

        

        private Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentValidationErrorType ErrorTypeField;

        private string ErrorDescriptionField;

        private string AttributeNameField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.PaymentValidationErrorType ErrorType
        {
            get
            {
                return this.ErrorTypeField;
            }
            set
            {
                this.ErrorTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public string ErrorDescription
        {
            get
            {
                return this.ErrorDescriptionField;
            }
            set
            {
                this.ErrorDescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public string AttributeName
        {
            get
            {
                return this.AttributeNameField;
            }
            set
            {
                this.AttributeNameField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FindStationsByShoppingAttributesRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class FindStationsByShoppingAttributesRequestData : object
    {

        

        private string DepartureStationField;

        private System.DateTime InclusiveStartDateField;

        private System.DateTime InclusiveEndDateField;

        private string[] ShoppingAttributeCodesField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartureStation
        {
            get
            {
                return this.DepartureStationField;
            }
            set
            {
                this.DepartureStationField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InclusiveStartDate
        {
            get
            {
                return this.InclusiveStartDateField;
            }
            set
            {
                this.InclusiveStartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.DateTime InclusiveEndDate
        {
            get
            {
                return this.InclusiveEndDateField;
            }
            set
            {
                this.InclusiveEndDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public string[] ShoppingAttributeCodes
        {
            get
            {
                return this.ShoppingAttributeCodesField;
            }
            set
            {
                this.ShoppingAttributeCodesField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FindStationsByShoppingAttributesResponseData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class FindStationsByShoppingAttributesResponseData : object
    {

        

        private Newskies.UtilitiesManager.StationShoppingAttributeMatch[] StationShoppingAttributeMatchListField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Newskies.UtilitiesManager.StationShoppingAttributeMatch[] StationShoppingAttributeMatchList
        {
            get
            {
                return this.StationShoppingAttributeMatchListField;
            }
            set
            {
                this.StationShoppingAttributeMatchListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StationShoppingAttributeMatch", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class StationShoppingAttributeMatch : object
    {

        

        private string StationCodeField;

        private Newskies.UtilitiesManager.StationShoppingAttribute[] StationShoppingAttributeListField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StationCode
        {
            get
            {
                return this.StationCodeField;
            }
            set
            {
                this.StationCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Newskies.UtilitiesManager.StationShoppingAttribute[] StationShoppingAttributeList
        {
            get
            {
                return this.StationShoppingAttributeListField;
            }
            set
            {
                this.StationShoppingAttributeListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "StationShoppingAttribute", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class StationShoppingAttribute : object
    {

        

        private long IDField;

        private System.DateTime StartDateField;

        private System.DateTime EndDateField;

        private short RecurrenceCountField;

        private string DescriptionField;

        private string ShoppingAttributeCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate
        {
            get
            {
                return this.StartDateField;
            }
            set
            {
                this.StartDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public System.DateTime EndDate
        {
            get
            {
                return this.EndDateField;
            }
            set
            {
                this.EndDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public short RecurrenceCount
        {
            get
            {
                return this.RecurrenceCountField;
            }
            set
            {
                this.RecurrenceCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public string ShoppingAttributeCode
        {
            get
            {
                return this.ShoppingAttributeCodeField;
            }
            set
            {
                this.ShoppingAttributeCodeField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FindShoppingAttributesRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class FindShoppingAttributesRequestData : Navitaire.WebServices.DataContracts.Common.RequestBaseVer2
    {

        private bool GetDetailsField;

        private bool FromDatabaseField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool GetDetails
        {
            get
            {
                return this.GetDetailsField;
            }
            set
            {
                this.GetDetailsField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public bool FromDatabase
        {
            get
            {
                return this.FromDatabaseField;
            }
            set
            {
                this.FromDatabaseField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FindShoppingAttributesResponseData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class FindShoppingAttributesResponseData : Navitaire.WebServices.DataContracts.Common.ResponseBase
    {

        private Newskies.UtilitiesManager.ShoppingAttribute[] ShoppingAttributeListField;

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Newskies.UtilitiesManager.ShoppingAttribute[] ShoppingAttributeList
        {
            get
            {
                return this.ShoppingAttributeListField;
            }
            set
            {
                this.ShoppingAttributeListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ShoppingAttribute", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class ShoppingAttribute : object
    {

        

        private bool ActiveField;

        private string DescriptionField;

        private string NameField;

        private string ShoppingAttributeCodeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.ShoppingAttributeType TypeField;

        private string[] ShoppingAttributeGroupsField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active
        {
            get
            {
                return this.ActiveField;
            }
            set
            {
                this.ActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShoppingAttributeCode
        {
            get
            {
                return this.ShoppingAttributeCodeField;
            }
            set
            {
                this.ShoppingAttributeCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.ShoppingAttributeType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public string[] ShoppingAttributeGroups
        {
            get
            {
                return this.ShoppingAttributeGroupsField;
            }
            set
            {
                this.ShoppingAttributeGroupsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "GetMACListRequestData", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class GetMACListRequestData : object
    {

        

        private bool ActiveOnlyField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveOnly
        {
            get
            {
                return this.ActiveOnlyField;
            }
            set
            {
                this.ActiveOnlyField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MAC", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class MAC : object
    {

        

        private string MACCodeField;

        private string NameField;

        private bool InActiveField;

        private string[] MACStationListField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MACCode
        {
            get
            {
                return this.MACCodeField;
            }
            set
            {
                this.MACCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public string[] MACStationList
        {
            get
            {
                return this.MACStationListField;
            }
            set
            {
                this.MACStationListField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Market", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities")]
    public partial class Market : object
    {

        

        private string LocationCodeField;

        private string TravelLocationCodeField;

        private int EarliestCheckInFromField;

        private int LatestCheckInFromField;

        private int EarliestCheckInToField;

        private int LatestCheckInToField;

        private bool InActiveField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.MarketLocationType LocationTypeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.MarketLocationType TravelLocationTypeField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.Directionality IncludesTaxesAndFeesField;

        private Navitaire.WebServices.DataContracts.Common.Enumerations.TravelDocsRequired TravelDocsRequiredField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode
        {
            get
            {
                return this.LocationCodeField;
            }
            set
            {
                this.LocationCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TravelLocationCode
        {
            get
            {
                return this.TravelLocationCodeField;
            }
            set
            {
                this.TravelLocationCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public int EarliestCheckInFrom
        {
            get
            {
                return this.EarliestCheckInFromField;
            }
            set
            {
                this.EarliestCheckInFromField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public int LatestCheckInFrom
        {
            get
            {
                return this.LatestCheckInFromField;
            }
            set
            {
                this.LatestCheckInFromField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public int EarliestCheckInTo
        {
            get
            {
                return this.EarliestCheckInToField;
            }
            set
            {
                this.EarliestCheckInToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 5)]
        public int LatestCheckInTo
        {
            get
            {
                return this.LatestCheckInToField;
            }
            set
            {
                this.LatestCheckInToField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 6)]
        public bool InActive
        {
            get
            {
                return this.InActiveField;
            }
            set
            {
                this.InActiveField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 7)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.MarketLocationType LocationType
        {
            get
            {
                return this.LocationTypeField;
            }
            set
            {
                this.LocationTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 8)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.MarketLocationType TravelLocationType
        {
            get
            {
                return this.TravelLocationTypeField;
            }
            set
            {
                this.TravelLocationTypeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 9)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.Directionality IncludesTaxesAndFees
        {
            get
            {
                return this.IncludesTaxesAndFeesField;
            }
            set
            {
                this.IncludesTaxesAndFeesField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 10)]
        public Navitaire.WebServices.DataContracts.Common.Enumerations.TravelDocsRequired TravelDocsRequired
        {
            get
            {
                return this.TravelDocsRequiredField;
            }
            set
            {
                this.TravelDocsRequiredField = value;
            }
        }
    }
}
namespace Navitaire.WebServices.DataContracts.Common.Enumerations
{
    using System.Runtime.Serialization;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SeatRestriction", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum SeatRestriction : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlwaysAllowed = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultAllowed = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultRestricted = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "SSRType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum SSRType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Standard = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Infant = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Meal = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        BaggageAllowance = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        TravelLineMeal = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "DCCType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum DCCType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZeroRate = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullAmount = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PaymentRefundType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum PaymentRefundType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAllowed = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        LineItemLevel = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountLevel = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        BookingLevel = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RefundCurrencyControl", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum RefundCurrencyControl : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseCollectedCurrency = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseQuotedCurrency = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "BookingPaymentField", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum BookingPaymentField : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Miscellaneous = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountNumber = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Amount = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpirationDate = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyCode = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentText = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrepaidApprovalCode = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deposit = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PaymentUIState", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum PaymentUIState : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Enabled = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disabled = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hidden = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RequiredType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum RequiredType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optional = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotAllowed = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FieldValueType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum FieldValueType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpperCaseString = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Numeric = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alphanumeric = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Amount = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mod10 = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Name = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Address = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        State = 9,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zip = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        City = 12,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Boolean = 13,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "PaxAddressRequirement", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum PaxAddressRequirement : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotRequired = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredNonResident = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredForAllInbound = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredForNonResidentInbound = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredForAllOutbound = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredForNonResidentOutbound = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredForAllInboundNonResidentOutbound = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequiredForNonResidentInboundAllOutbound = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllNonCitizens = 9,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllNonCitizensAndNonResidentPassengers = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ShoppingAttributeType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum ShoppingAttributeType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Destination = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Region = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Event = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MarketLocationType", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum MarketLocationType : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Station = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        MAC = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "Directionality", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum Directionality : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        To = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        From = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Between = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TravelDocsRequired", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common/Enumerations")]
    public enum TravelDocsRequired : int
    {

        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromTravel = 1,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToTravel = 2,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        BothTravel = 3,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        BothOverride = 4,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromOverride = 5,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToOverride = 6,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToTravelToOverride = 7,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToTravelBothOverride = 8,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        ToTravelFromOverride = 9,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromTravelToOverride = 10,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromTravelBothOverride = 11,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        FromTravelFromOverride = 12,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        BothTravelToOverride = 13,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        BothTravelBothOverride = 14,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        BothTravelFromOverride = 15,

        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unmapped = -1,
    }
}
namespace Navitaire.WebServices.DataContracts.Common
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "RequestBaseVer2", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Newskies.UtilitiesManager.FindShoppingAttributesRequestData))]
    public partial class RequestBaseVer2 : object
    {

        

        private bool ActiveOnlyField;

        private short PageSizeField;

        private long LastIDField;

        private string CultureCodeField;

        private bool GetTotalCountField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActiveOnly
        {
            get
            {
                return this.ActiveOnlyField;
            }
            set
            {
                this.ActiveOnlyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PageSize
        {
            get
            {
                return this.PageSizeField;
            }
            set
            {
                this.PageSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public long LastID
        {
            get
            {
                return this.LastIDField;
            }
            set
            {
                this.LastIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 4)]
        public bool GetTotalCount
        {
            get
            {
                return this.GetTotalCountField;
            }
            set
            {
                this.GetTotalCountField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ResponseBase", Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Common")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Newskies.UtilitiesManager.FindShoppingAttributesResponseData))]
    public partial class ResponseBase : object
    {

        

        private short PageSizeField;

        private long LastIDField;

        private int TotalCountField;

        private string CultureCodeField;

        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PageSize
        {
            get
            {
                return this.PageSizeField;
            }
            set
            {
                this.PageSizeField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 1)]
        public long LastID
        {
            get
            {
                return this.LastIDField;
            }
            set
            {
                this.LastIDField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 2)]
        public int TotalCount
        {
            get
            {
                return this.TotalCountField;
            }
            set
            {
                this.TotalCountField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute(Order = 3)]
        public string CultureCode
        {
            get
            {
                return this.CultureCodeField;
            }
            set
            {
                this.CultureCodeField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace = "http://schemas.navitaire.com/WebServices", ConfigurationName = "IUtilitiesManager")]
public interface IUtilitiesManager// : System.IDisposable
{

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetSSRListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListAPIFaultFaul" +
        "t", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListAPIGeneralFa" +
        "ultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListAPICriticalF" +
        "aultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListAPIWarningFa" +
        "ultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListAPIValidatio" +
        "nFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListAPISecurityF" +
        "aultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListAPIUnhandled" +
        "ServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetSSRListResponse GetSSRList(GetSSRListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSSRListResponse")]
    System.Threading.Tasks.Task<GetSSRListResponse> GetSSRListAsync(GetSSRListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetDocTypeListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListResponse" +
        "")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListAPIFault" +
        "Fault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListAPIGener" +
        "alFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListAPICriti" +
        "calFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListAPIWarni" +
        "ngFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListAPIValid" +
        "ationFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListAPISecur" +
        "ityFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListAPIUnhan" +
        "dledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetDocTypeListResponse GetDocTypeList(GetDocTypeListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetDocTypeListResponse" +
        "")]
    System.Threading.Tasks.Task<GetDocTypeListResponse> GetDocTypeListAsync(GetDocTypeListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetFeeListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListAPIFaultFaul" +
        "t", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListAPIGeneralFa" +
        "ultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListAPICriticalF" +
        "aultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListAPIWarningFa" +
        "ultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListAPIValidatio" +
        "nFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListAPISecurityF" +
        "aultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListAPIUnhandled" +
        "ServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetFeeListResponse GetFeeList(GetFeeListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetFeeListResponse")]
    System.Threading.Tasks.Task<GetFeeListResponse> GetFeeListAsync(GetFeeListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetSuffixListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListAPIFaultF" +
        "ault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListAPIGenera" +
        "lFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListAPICritic" +
        "alFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListAPIWarnin" +
        "gFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListAPIValida" +
        "tionFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListAPISecuri" +
        "tyFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListAPIUnhand" +
        "ledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetSuffixListResponse GetSuffixList(GetSuffixListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetSuffixListResponse")]
    System.Threading.Tasks.Task<GetSuffixListResponse> GetSuffixListAsync(GetSuffixListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetStationListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListResponse" +
        "")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListAPIFault" +
        "Fault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListAPIGener" +
        "alFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListAPICriti" +
        "calFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListAPIWarni" +
        "ngFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListAPIValid" +
        "ationFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListAPISecur" +
        "ityFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListAPIUnhan" +
        "dledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetStationListResponse GetStationList(GetStationListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetStationListResponse" +
        "")]
    System.Threading.Tasks.Task<GetStationListResponse> GetStationListAsync(GetStationListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetTitleListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListAPIFaultFa" +
        "ult", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListAPIGeneral" +
        "FaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListAPICritica" +
        "lFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListAPIWarning" +
        "FaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListAPIValidat" +
        "ionFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListAPISecurit" +
        "yFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListAPIUnhandl" +
        "edServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetTitleListResponse GetTitleList(GetTitleListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetTitleListResponse")]
    System.Threading.Tasks.Task<GetTitleListResponse> GetTitleListAsync(GetTitleListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetProvinceStateListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListRe" +
        "sponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListAP" +
        "IFaultFault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListAP" +
        "IGeneralFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListAP" +
        "ICriticalFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListAP" +
        "IWarningFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListAP" +
        "IValidationFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListAP" +
        "ISecurityFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListAP" +
        "IUnhandledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetProvinceStateListResponse GetProvinceStateList(GetProvinceStateListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetProvinceStateListRe" +
        "sponse")]
    System.Threading.Tasks.Task<GetProvinceStateListResponse> GetProvinceStateListAsync(GetProvinceStateListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetPaymentMethodsListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListR" +
        "esponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListA" +
        "PIFaultFault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListA" +
        "PIGeneralFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListA" +
        "PICriticalFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListA" +
        "PIWarningFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListA" +
        "PIValidationFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListA" +
        "PISecurityFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListA" +
        "PIUnhandledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetPaymentMethodsListResponse GetPaymentMethodsList(GetPaymentMethodsListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetPaymentMethodsListR" +
        "esponse")]
    System.Threading.Tasks.Task<GetPaymentMethodsListResponse> GetPaymentMethodsListAsync(GetPaymentMethodsListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetCountryListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListResponse" +
        "")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListAPIFault" +
        "Fault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListAPIGener" +
        "alFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListAPICriti" +
        "calFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListAPIWarni" +
        "ngFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListAPIValid" +
        "ationFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListAPISecur" +
        "ityFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListAPIUnhan" +
        "dledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetCountryListResponse GetCountryList(GetCountryListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetCountryListResponse" +
        "")]
    System.Threading.Tasks.Task<GetCountryListResponse> GetCountryListAsync(GetCountryListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetExternalRateListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListRes" +
        "ponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListAPI" +
        "FaultFault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListAPI" +
        "GeneralFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListAPI" +
        "CriticalFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListAPI" +
        "WarningFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListAPI" +
        "ValidationFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListAPI" +
        "SecurityFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListAPI" +
        "UnhandledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetExternalRateListResponse GetExternalRateList(GetExternalRateListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetExternalRateListRes" +
        "ponse")]
    System.Threading.Tasks.Task<GetExternalRateListResponse> GetExternalRateListAsync(GetExternalRateListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message FindStationsByShoppingAttributesRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindStationsByShopping" +
        "Attributes", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindStationsByShopping" +
        "AttributesResponse")]
    FindStationsByShoppingAttributesResponse FindStationsByShoppingAttributes(FindStationsByShoppingAttributesRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindStationsByShopping" +
        "Attributes", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindStationsByShopping" +
        "AttributesResponse")]
    System.Threading.Tasks.Task<FindStationsByShoppingAttributesResponse> FindStationsByShoppingAttributesAsync(FindStationsByShoppingAttributesRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message FindShoppingAttributesRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "Response")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "APIFaultFault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "APIGeneralFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "APICriticalFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "APIWarningFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "APIValidationFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "APISecurityFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "APIUnhandledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    FindShoppingAttributesResponse FindShoppingAttributes(FindShoppingAttributesRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/FindShoppingAttributes" +
        "Response")]
    System.Threading.Tasks.Task<FindShoppingAttributesResponse> FindShoppingAttributesAsync(FindShoppingAttributesRequest request);

    // CODEGEN: Generating message contract since the operation LoopBackTest is neither RPC nor document wrapped.
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTest", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestAPIFaultFa" +
        "ult", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestAPIGeneral" +
        "FaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestAPICritica" +
        "lFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestAPIWarning" +
        "FaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestAPIValidat" +
        "ionFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestAPISecurit" +
        "yFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestAPIUnhandl" +
        "edServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    LoopBackTestResponse LoopBackTest(LoopBackTestRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTest", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/LoopBackTestResponse")]
    System.Threading.Tasks.Task<LoopBackTestResponse> LoopBackTestAsync(LoopBackTestRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetMACListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListAPIFaultFaul" +
        "t", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListAPIGeneralFa" +
        "ultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListAPICriticalF" +
        "aultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListAPIWarningFa" +
        "ultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListAPIValidatio" +
        "nFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListAPISecurityF" +
        "aultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListAPIUnhandled" +
        "ServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetMACListResponse GetMACList(GetMACListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMACListResponse")]
    System.Threading.Tasks.Task<GetMACListResponse> GetMACListAsync(GetMACListRequest request);

    // CODEGEN: Generating message contract since the wrapper namespace (http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService) of message GetMarketListRequest does not match the default value (http://schemas.navitaire.com/WebServices)
    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListAPIFaultF" +
        "ault", Name = "APIFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIGeneralFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListAPIGenera" +
        "lFaultFault", Name = "APIGeneralFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APICriticalFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListAPICritic" +
        "alFaultFault", Name = "APICriticalFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIWarningFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListAPIWarnin" +
        "gFaultFault", Name = "APIWarningFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIValidationFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListAPIValida" +
        "tionFaultFault", Name = "APIValidationFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APISecurityFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListAPISecuri" +
        "tyFaultFault", Name = "APISecurityFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    [System.ServiceModel.FaultContractAttribute(typeof(Navitaire.WebServices.FaultContracts.APIUnhandledServerFault), Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListAPIUnhand" +
        "ledServerFaultFault", Name = "APIUnhandledServerFault", Namespace = "http://schemas.navitaire.com/WebServices/FaultContracts")]
    GetMarketListResponse GetMarketList(GetMarketListRequest request);

    [System.ServiceModel.OperationContractAttribute(Action = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketList", ReplyAction = "http://schemas.navitaire.com/WebServices/IUtilitiesManager/GetMarketListResponse")]
    System.Threading.Tasks.Task<GetMarketListResponse> GetMarketListAsync(GetMarketListRequest request);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetSSRListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetSSRListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetSSRListRequestData GetSSRListRequestData;

    public GetSSRListRequest()
    {
    }

    public GetSSRListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetSSRListRequestData GetSSRListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetSSRListRequestData = GetSSRListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetSSRListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetSSRListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.SSR[] SSRList;

    public GetSSRListResponse()
    {
    }

    public GetSSRListResponse(Newskies.UtilitiesManager.SSR[] SSRList)
    {
        this.SSRList = SSRList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocTypeListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetDocTypeListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetDocTypeListRequestData GetDocTypeListRequestData;

    public GetDocTypeListRequest()
    {
    }

    public GetDocTypeListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetDocTypeListRequestData GetDocTypeListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetDocTypeListRequestData = GetDocTypeListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetDocTypeListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetDocTypeListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.DocType[] DocTypeList;

    public GetDocTypeListResponse()
    {
    }

    public GetDocTypeListResponse(Newskies.UtilitiesManager.DocType[] DocTypeList)
    {
        this.DocTypeList = DocTypeList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetFeeListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetFeeListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetFeeListRequestData GetFeeListRequestData;

    public GetFeeListRequest()
    {
    }

    public GetFeeListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetFeeListRequestData GetFeeListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetFeeListRequestData = GetFeeListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetFeeListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetFeeListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.Fee[] FeeList;

    public GetFeeListResponse()
    {
    }

    public GetFeeListResponse(Newskies.UtilitiesManager.Fee[] FeeList)
    {
        this.FeeList = FeeList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetSuffixListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetSuffixListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetSuffixListRequestData GetSuffixListRequestData;

    public GetSuffixListRequest()
    {
    }

    public GetSuffixListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetSuffixListRequestData GetSuffixListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetSuffixListRequestData = GetSuffixListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetSuffixListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetSuffixListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.Suffix[] SuffixList;

    public GetSuffixListResponse()
    {
    }

    public GetSuffixListResponse(Newskies.UtilitiesManager.Suffix[] SuffixList)
    {
        this.SuffixList = SuffixList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetStationListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetStationListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetStationListRequestData GetStationListRequestData;

    public GetStationListRequest()
    {
    }

    public GetStationListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetStationListRequestData GetStationListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetStationListRequestData = GetStationListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetStationListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetStationListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.Station[] StationList;

    public GetStationListResponse()
    {
    }

    public GetStationListResponse(Newskies.UtilitiesManager.Station[] StationList)
    {
        this.StationList = StationList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetTitleListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetTitleListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetTitleListRequestData GetTitleListRequestData;

    public GetTitleListRequest()
    {
    }

    public GetTitleListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetTitleListRequestData GetTitleListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetTitleListRequestData = GetTitleListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetTitleListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetTitleListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.Title[] TitleList;

    public GetTitleListResponse()
    {
    }

    public GetTitleListResponse(Newskies.UtilitiesManager.Title[] TitleList)
    {
        this.TitleList = TitleList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetProvinceStateListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetProvinceStateListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetProvinceStateListRequestData GetProvinceStateListRequestData;

    public GetProvinceStateListRequest()
    {
    }

    public GetProvinceStateListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetProvinceStateListRequestData GetProvinceStateListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetProvinceStateListRequestData = GetProvinceStateListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetProvinceStateListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetProvinceStateListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.ProvinceState[] ProvinceStateList;

    public GetProvinceStateListResponse()
    {
    }

    public GetProvinceStateListResponse(Newskies.UtilitiesManager.ProvinceState[] ProvinceStateList)
    {
        this.ProvinceStateList = ProvinceStateList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetPaymentMethodsListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetPaymentMethodsListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetPaymentMethodsListRequestData GetPaymentMethodsListRequestData;

    public GetPaymentMethodsListRequest()
    {
    }

    public GetPaymentMethodsListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetPaymentMethodsListRequestData GetPaymentMethodsListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetPaymentMethodsListRequestData = GetPaymentMethodsListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetPaymentMethodsListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetPaymentMethodsListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.PaymentMethod[] PaymentMethodList;

    public GetPaymentMethodsListResponse()
    {
    }

    public GetPaymentMethodsListResponse(Newskies.UtilitiesManager.PaymentMethod[] PaymentMethodList)
    {
        this.PaymentMethodList = PaymentMethodList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetCountryListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetCountryListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetCountryListRequestData GetCountryListRequestData;

    public GetCountryListRequest()
    {
    }

    public GetCountryListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetCountryListRequestData GetCountryListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetCountryListRequestData = GetCountryListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetCountryListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetCountryListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.Country[] CountryList;

    public GetCountryListResponse()
    {
    }

    public GetCountryListResponse(Newskies.UtilitiesManager.Country[] CountryList)
    {
        this.CountryList = CountryList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetExternalRateListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetExternalRateListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    public GetExternalRateListRequest()
    {
    }

    public GetExternalRateListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetExternalRateListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetExternalRateListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetExternalRatesListResponseData GetExternalRatesListResponseData;

    public GetExternalRateListResponse()
    {
    }

    public GetExternalRateListResponse(Newskies.UtilitiesManager.GetExternalRatesListResponseData GetExternalRatesListResponseData)
    {
        this.GetExternalRatesListResponseData = GetExternalRatesListResponseData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "FindStationsByShoppingAttributesRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class FindStationsByShoppingAttributesRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.FindStationsByShoppingAttributesRequestData FindStationsByShoppingAttributesRequestData;

    public FindStationsByShoppingAttributesRequest()
    {
    }

    public FindStationsByShoppingAttributesRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.FindStationsByShoppingAttributesRequestData FindStationsByShoppingAttributesRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.FindStationsByShoppingAttributesRequestData = FindStationsByShoppingAttributesRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "FindStationsByShoppingAttributesResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class FindStationsByShoppingAttributesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.FindStationsByShoppingAttributesResponseData FindStationsByShoppingAttributesResponseData;

    public FindStationsByShoppingAttributesResponse()
    {
    }

    public FindStationsByShoppingAttributesResponse(Newskies.UtilitiesManager.FindStationsByShoppingAttributesResponseData FindStationsByShoppingAttributesResponseData)
    {
        this.FindStationsByShoppingAttributesResponseData = FindStationsByShoppingAttributesResponseData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "FindShoppingAttributeRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class FindShoppingAttributesRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.FindShoppingAttributesRequestData FindShoppingAttributesRequestData;

    public FindShoppingAttributesRequest()
    {
    }

    public FindShoppingAttributesRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.FindShoppingAttributesRequestData FindShoppingAttributesRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.FindShoppingAttributesRequestData = FindShoppingAttributesRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "FindShoppingAttributeResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class FindShoppingAttributesResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.FindShoppingAttributesResponseData FindShoppingAttributeResponseData;

    public FindShoppingAttributesResponse()
    {
    }

    public FindShoppingAttributesResponse(Newskies.UtilitiesManager.FindShoppingAttributesResponseData FindShoppingAttributeResponseData)
    {
        this.FindShoppingAttributeResponseData = FindShoppingAttributeResponseData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class LoopBackTestRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public string InputString;

    public LoopBackTestRequest()
    {
    }

    public LoopBackTestRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, string InputString)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.InputString = InputString;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
public partial class LoopBackTestResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public string OutputString;

    public LoopBackTestResponse()
    {
    }

    public LoopBackTestResponse(string OutputString)
    {
        this.OutputString = OutputString;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetMACListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetMACListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.GetMACListRequestData GetMACListRequestData;

    public GetMACListRequest()
    {
    }

    public GetMACListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetMACListRequestData GetMACListRequestData)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
        this.GetMACListRequestData = GetMACListRequestData;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetMACListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetMACListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.MAC[] MACList;

    public GetMACListResponse()
    {
    }

    public GetMACListResponse(Newskies.UtilitiesManager.MAC[] MACList)
    {
        this.MACList = MACList;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetMarketListRequest", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetMarketListRequest
{

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public int ContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public bool EnableExceptionStackTrace;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string MessageContractVersion;

    [System.ServiceModel.MessageHeaderAttribute(Namespace = "http://schemas.navitaire.com/WebServices")]
    public string Signature;

    public GetMarketListRequest()
    {
    }

    public GetMarketListRequest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
    {
        this.ContractVersion = ContractVersion;
        this.EnableExceptionStackTrace = EnableExceptionStackTrace;
        this.MessageContractVersion = MessageContractVersion;
        this.Signature = Signature;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
[System.ServiceModel.MessageContractAttribute(WrapperName = "GetMarketListResponse", WrapperNamespace = "http://schemas.navitaire.com/WebServices/ServiceContracts/UtilitiesService", IsWrapped = true)]
public partial class GetMarketListResponse
{

    [System.ServiceModel.MessageBodyMemberAttribute(Namespace = "http://schemas.navitaire.com/WebServices/DataContracts/Utilities", Order = 0)]
    public Newskies.UtilitiesManager.Market[] MarketList;

    public GetMarketListResponse()
    {
    }

    public GetMarketListResponse(Newskies.UtilitiesManager.Market[] MarketList)
    {
        this.MarketList = MarketList;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IUtilitiesManagerChannel : IUtilitiesManager, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class UtilitiesManagerClient : System.ServiceModel.ClientBase<IUtilitiesManager>, IUtilitiesManager// , System.IDisposable
{

    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);

    public UtilitiesManagerClient() : 
                base(UtilitiesManagerClient.GetDefaultBinding(), UtilitiesManagerClient.GetDefaultEndpointAddress())
        {
        this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IUtilitiesManager.ToString();
        ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
    }

    public UtilitiesManagerClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public UtilitiesManagerClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public UtilitiesManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public UtilitiesManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetSSRListResponse IUtilitiesManager.GetSSRList(GetSSRListRequest request)
    {
        return base.Channel.GetSSRList(request);
    }

    public Newskies.UtilitiesManager.SSR[] GetSSRList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetSSRListRequestData GetSSRListRequestData)
    {
        GetSSRListRequest inValue = new GetSSRListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetSSRListRequestData = GetSSRListRequestData;
        GetSSRListResponse retVal = ((IUtilitiesManager)(this)).GetSSRList(inValue);
        return retVal.SSRList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetSSRListResponse> IUtilitiesManager.GetSSRListAsync(GetSSRListRequest request)
    {
        return base.Channel.GetSSRListAsync(request);
    }

    public System.Threading.Tasks.Task<GetSSRListResponse> GetSSRListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetSSRListRequestData GetSSRListRequestData)
    {
        GetSSRListRequest inValue = new GetSSRListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetSSRListRequestData = GetSSRListRequestData;
        return ((IUtilitiesManager)(this)).GetSSRListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetDocTypeListResponse IUtilitiesManager.GetDocTypeList(GetDocTypeListRequest request)
    {
        return base.Channel.GetDocTypeList(request);
    }

    public Newskies.UtilitiesManager.DocType[] GetDocTypeList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetDocTypeListRequestData GetDocTypeListRequestData)
    {
        GetDocTypeListRequest inValue = new GetDocTypeListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetDocTypeListRequestData = GetDocTypeListRequestData;
        GetDocTypeListResponse retVal = ((IUtilitiesManager)(this)).GetDocTypeList(inValue);
        return retVal.DocTypeList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetDocTypeListResponse> IUtilitiesManager.GetDocTypeListAsync(GetDocTypeListRequest request)
    {
        return base.Channel.GetDocTypeListAsync(request);
    }

    public System.Threading.Tasks.Task<GetDocTypeListResponse> GetDocTypeListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetDocTypeListRequestData GetDocTypeListRequestData)
    {
        GetDocTypeListRequest inValue = new GetDocTypeListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetDocTypeListRequestData = GetDocTypeListRequestData;
        return ((IUtilitiesManager)(this)).GetDocTypeListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetFeeListResponse IUtilitiesManager.GetFeeList(GetFeeListRequest request)
    {
        return base.Channel.GetFeeList(request);
    }

    public Newskies.UtilitiesManager.Fee[] GetFeeList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetFeeListRequestData GetFeeListRequestData)
    {
        GetFeeListRequest inValue = new GetFeeListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetFeeListRequestData = GetFeeListRequestData;
        GetFeeListResponse retVal = ((IUtilitiesManager)(this)).GetFeeList(inValue);
        return retVal.FeeList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetFeeListResponse> IUtilitiesManager.GetFeeListAsync(GetFeeListRequest request)
    {
        return base.Channel.GetFeeListAsync(request);
    }

    public System.Threading.Tasks.Task<GetFeeListResponse> GetFeeListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetFeeListRequestData GetFeeListRequestData)
    {
        GetFeeListRequest inValue = new GetFeeListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetFeeListRequestData = GetFeeListRequestData;
        return ((IUtilitiesManager)(this)).GetFeeListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetSuffixListResponse IUtilitiesManager.GetSuffixList(GetSuffixListRequest request)
    {
        return base.Channel.GetSuffixList(request);
    }

    public Newskies.UtilitiesManager.Suffix[] GetSuffixList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetSuffixListRequestData GetSuffixListRequestData)
    {
        GetSuffixListRequest inValue = new GetSuffixListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetSuffixListRequestData = GetSuffixListRequestData;
        GetSuffixListResponse retVal = ((IUtilitiesManager)(this)).GetSuffixList(inValue);
        return retVal.SuffixList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetSuffixListResponse> IUtilitiesManager.GetSuffixListAsync(GetSuffixListRequest request)
    {
        return base.Channel.GetSuffixListAsync(request);
    }

    public System.Threading.Tasks.Task<GetSuffixListResponse> GetSuffixListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetSuffixListRequestData GetSuffixListRequestData)
    {
        GetSuffixListRequest inValue = new GetSuffixListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetSuffixListRequestData = GetSuffixListRequestData;
        return ((IUtilitiesManager)(this)).GetSuffixListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetStationListResponse IUtilitiesManager.GetStationList(GetStationListRequest request)
    {
        return base.Channel.GetStationList(request);
    }

    public Newskies.UtilitiesManager.Station[] GetStationList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetStationListRequestData GetStationListRequestData)
    {
        GetStationListRequest inValue = new GetStationListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetStationListRequestData = GetStationListRequestData;
        GetStationListResponse retVal = ((IUtilitiesManager)(this)).GetStationList(inValue);
        return retVal.StationList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetStationListResponse> IUtilitiesManager.GetStationListAsync(GetStationListRequest request)
    {
        return base.Channel.GetStationListAsync(request);
    }

    public System.Threading.Tasks.Task<GetStationListResponse> GetStationListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetStationListRequestData GetStationListRequestData)
    {
        GetStationListRequest inValue = new GetStationListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetStationListRequestData = GetStationListRequestData;
        return ((IUtilitiesManager)(this)).GetStationListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetTitleListResponse IUtilitiesManager.GetTitleList(GetTitleListRequest request)
    {
        return base.Channel.GetTitleList(request);
    }

    public Newskies.UtilitiesManager.Title[] GetTitleList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetTitleListRequestData GetTitleListRequestData)
    {
        GetTitleListRequest inValue = new GetTitleListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetTitleListRequestData = GetTitleListRequestData;
        GetTitleListResponse retVal = ((IUtilitiesManager)(this)).GetTitleList(inValue);
        return retVal.TitleList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetTitleListResponse> IUtilitiesManager.GetTitleListAsync(GetTitleListRequest request)
    {
        return base.Channel.GetTitleListAsync(request);
    }

    public System.Threading.Tasks.Task<GetTitleListResponse> GetTitleListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetTitleListRequestData GetTitleListRequestData)
    {
        GetTitleListRequest inValue = new GetTitleListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetTitleListRequestData = GetTitleListRequestData;
        return ((IUtilitiesManager)(this)).GetTitleListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetProvinceStateListResponse IUtilitiesManager.GetProvinceStateList(GetProvinceStateListRequest request)
    {
        return base.Channel.GetProvinceStateList(request);
    }

    public Newskies.UtilitiesManager.ProvinceState[] GetProvinceStateList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetProvinceStateListRequestData GetProvinceStateListRequestData)
    {
        GetProvinceStateListRequest inValue = new GetProvinceStateListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetProvinceStateListRequestData = GetProvinceStateListRequestData;
        GetProvinceStateListResponse retVal = ((IUtilitiesManager)(this)).GetProvinceStateList(inValue);
        return retVal.ProvinceStateList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetProvinceStateListResponse> IUtilitiesManager.GetProvinceStateListAsync(GetProvinceStateListRequest request)
    {
        return base.Channel.GetProvinceStateListAsync(request);
    }

    public System.Threading.Tasks.Task<GetProvinceStateListResponse> GetProvinceStateListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetProvinceStateListRequestData GetProvinceStateListRequestData)
    {
        GetProvinceStateListRequest inValue = new GetProvinceStateListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetProvinceStateListRequestData = GetProvinceStateListRequestData;
        return ((IUtilitiesManager)(this)).GetProvinceStateListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetPaymentMethodsListResponse IUtilitiesManager.GetPaymentMethodsList(GetPaymentMethodsListRequest request)
    {
        return base.Channel.GetPaymentMethodsList(request);
    }

    public Newskies.UtilitiesManager.PaymentMethod[] GetPaymentMethodsList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetPaymentMethodsListRequestData GetPaymentMethodsListRequestData)
    {
        GetPaymentMethodsListRequest inValue = new GetPaymentMethodsListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetPaymentMethodsListRequestData = GetPaymentMethodsListRequestData;
        GetPaymentMethodsListResponse retVal = ((IUtilitiesManager)(this)).GetPaymentMethodsList(inValue);
        return retVal.PaymentMethodList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetPaymentMethodsListResponse> IUtilitiesManager.GetPaymentMethodsListAsync(GetPaymentMethodsListRequest request)
    {
        return base.Channel.GetPaymentMethodsListAsync(request);
    }

    public System.Threading.Tasks.Task<GetPaymentMethodsListResponse> GetPaymentMethodsListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetPaymentMethodsListRequestData GetPaymentMethodsListRequestData)
    {
        GetPaymentMethodsListRequest inValue = new GetPaymentMethodsListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetPaymentMethodsListRequestData = GetPaymentMethodsListRequestData;
        return ((IUtilitiesManager)(this)).GetPaymentMethodsListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetCountryListResponse IUtilitiesManager.GetCountryList(GetCountryListRequest request)
    {
        return base.Channel.GetCountryList(request);
    }

    public Newskies.UtilitiesManager.Country[] GetCountryList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetCountryListRequestData GetCountryListRequestData)
    {
        GetCountryListRequest inValue = new GetCountryListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetCountryListRequestData = GetCountryListRequestData;
        GetCountryListResponse retVal = ((IUtilitiesManager)(this)).GetCountryList(inValue);
        return retVal.CountryList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetCountryListResponse> IUtilitiesManager.GetCountryListAsync(GetCountryListRequest request)
    {
        return base.Channel.GetCountryListAsync(request);
    }

    public System.Threading.Tasks.Task<GetCountryListResponse> GetCountryListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetCountryListRequestData GetCountryListRequestData)
    {
        GetCountryListRequest inValue = new GetCountryListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetCountryListRequestData = GetCountryListRequestData;
        return ((IUtilitiesManager)(this)).GetCountryListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetExternalRateListResponse IUtilitiesManager.GetExternalRateList(GetExternalRateListRequest request)
    {
        return base.Channel.GetExternalRateList(request);
    }

    public Newskies.UtilitiesManager.GetExternalRatesListResponseData GetExternalRateList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
    {
        GetExternalRateListRequest inValue = new GetExternalRateListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        GetExternalRateListResponse retVal = ((IUtilitiesManager)(this)).GetExternalRateList(inValue);
        return retVal.GetExternalRatesListResponseData;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetExternalRateListResponse> IUtilitiesManager.GetExternalRateListAsync(GetExternalRateListRequest request)
    {
        return base.Channel.GetExternalRateListAsync(request);
    }

    public System.Threading.Tasks.Task<GetExternalRateListResponse> GetExternalRateListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
    {
        GetExternalRateListRequest inValue = new GetExternalRateListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        return ((IUtilitiesManager)(this)).GetExternalRateListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    FindStationsByShoppingAttributesResponse IUtilitiesManager.FindStationsByShoppingAttributes(FindStationsByShoppingAttributesRequest request)
    {
        return base.Channel.FindStationsByShoppingAttributes(request);
    }

    public Newskies.UtilitiesManager.FindStationsByShoppingAttributesResponseData FindStationsByShoppingAttributes(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.FindStationsByShoppingAttributesRequestData FindStationsByShoppingAttributesRequestData)
    {
        FindStationsByShoppingAttributesRequest inValue = new FindStationsByShoppingAttributesRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.FindStationsByShoppingAttributesRequestData = FindStationsByShoppingAttributesRequestData;
        FindStationsByShoppingAttributesResponse retVal = ((IUtilitiesManager)(this)).FindStationsByShoppingAttributes(inValue);
        return retVal.FindStationsByShoppingAttributesResponseData;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<FindStationsByShoppingAttributesResponse> IUtilitiesManager.FindStationsByShoppingAttributesAsync(FindStationsByShoppingAttributesRequest request)
    {
        return base.Channel.FindStationsByShoppingAttributesAsync(request);
    }

    public System.Threading.Tasks.Task<FindStationsByShoppingAttributesResponse> FindStationsByShoppingAttributesAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.FindStationsByShoppingAttributesRequestData FindStationsByShoppingAttributesRequestData)
    {
        FindStationsByShoppingAttributesRequest inValue = new FindStationsByShoppingAttributesRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.FindStationsByShoppingAttributesRequestData = FindStationsByShoppingAttributesRequestData;
        return ((IUtilitiesManager)(this)).FindStationsByShoppingAttributesAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    FindShoppingAttributesResponse IUtilitiesManager.FindShoppingAttributes(FindShoppingAttributesRequest request)
    {
        return base.Channel.FindShoppingAttributes(request);
    }

    public Newskies.UtilitiesManager.FindShoppingAttributesResponseData FindShoppingAttributes(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.FindShoppingAttributesRequestData FindShoppingAttributesRequestData)
    {
        FindShoppingAttributesRequest inValue = new FindShoppingAttributesRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.FindShoppingAttributesRequestData = FindShoppingAttributesRequestData;
        FindShoppingAttributesResponse retVal = ((IUtilitiesManager)(this)).FindShoppingAttributes(inValue);
        return retVal.FindShoppingAttributeResponseData;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<FindShoppingAttributesResponse> IUtilitiesManager.FindShoppingAttributesAsync(FindShoppingAttributesRequest request)
    {
        return base.Channel.FindShoppingAttributesAsync(request);
    }

    public System.Threading.Tasks.Task<FindShoppingAttributesResponse> FindShoppingAttributesAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.FindShoppingAttributesRequestData FindShoppingAttributesRequestData)
    {
        FindShoppingAttributesRequest inValue = new FindShoppingAttributesRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.FindShoppingAttributesRequestData = FindShoppingAttributesRequestData;
        return ((IUtilitiesManager)(this)).FindShoppingAttributesAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    LoopBackTestResponse IUtilitiesManager.LoopBackTest(LoopBackTestRequest request)
    {
        return base.Channel.LoopBackTest(request);
    }

    public string LoopBackTest(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, string InputString)
    {
        LoopBackTestRequest inValue = new LoopBackTestRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.InputString = InputString;
        LoopBackTestResponse retVal = ((IUtilitiesManager)(this)).LoopBackTest(inValue);
        return retVal.OutputString;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<LoopBackTestResponse> IUtilitiesManager.LoopBackTestAsync(LoopBackTestRequest request)
    {
        return base.Channel.LoopBackTestAsync(request);
    }

    public System.Threading.Tasks.Task<LoopBackTestResponse> LoopBackTestAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, string InputString)
    {
        LoopBackTestRequest inValue = new LoopBackTestRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.InputString = InputString;
        return ((IUtilitiesManager)(this)).LoopBackTestAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetMACListResponse IUtilitiesManager.GetMACList(GetMACListRequest request)
    {
        return base.Channel.GetMACList(request);
    }

    public Newskies.UtilitiesManager.MAC[] GetMACList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetMACListRequestData GetMACListRequestData)
    {
        GetMACListRequest inValue = new GetMACListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetMACListRequestData = GetMACListRequestData;
        GetMACListResponse retVal = ((IUtilitiesManager)(this)).GetMACList(inValue);
        return retVal.MACList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetMACListResponse> IUtilitiesManager.GetMACListAsync(GetMACListRequest request)
    {
        return base.Channel.GetMACListAsync(request);
    }

    public System.Threading.Tasks.Task<GetMACListResponse> GetMACListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature, Newskies.UtilitiesManager.GetMACListRequestData GetMACListRequestData)
    {
        GetMACListRequest inValue = new GetMACListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        inValue.GetMACListRequestData = GetMACListRequestData;
        return ((IUtilitiesManager)(this)).GetMACListAsync(inValue);
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    GetMarketListResponse IUtilitiesManager.GetMarketList(GetMarketListRequest request)
    {
        return base.Channel.GetMarketList(request);
    }

    public Newskies.UtilitiesManager.Market[] GetMarketList(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
    {
        GetMarketListRequest inValue = new GetMarketListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        GetMarketListResponse retVal = ((IUtilitiesManager)(this)).GetMarketList(inValue);
        return retVal.MarketList;
    }

    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.Threading.Tasks.Task<GetMarketListResponse> IUtilitiesManager.GetMarketListAsync(GetMarketListRequest request)
    {
        return base.Channel.GetMarketListAsync(request);
    }

    public System.Threading.Tasks.Task<GetMarketListResponse> GetMarketListAsync(int ContractVersion, bool EnableExceptionStackTrace, string MessageContractVersion, string Signature)
    {
        GetMarketListRequest inValue = new GetMarketListRequest();
        inValue.ContractVersion = ContractVersion;
        inValue.EnableExceptionStackTrace = EnableExceptionStackTrace;
        inValue.MessageContractVersion = MessageContractVersion;
        inValue.Signature = Signature;
        return ((IUtilitiesManager)(this)).GetMarketListAsync(inValue);
    }

    private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUtilitiesManager))
        {
            System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
            result.MaxBufferSize = int.MaxValue;
            result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
            result.MaxReceivedMessageSize = int.MaxValue;
            result.AllowCookies = true;
            result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
            return result;
        }
        throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
    }

    private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
    {
        if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUtilitiesManager))
        {
            return new System.ServiceModel.EndpointAddress("https://0pprodr4xapi.navitaire.com/UtilitiesManager.svc");
        }
        throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
    }

    private static System.ServiceModel.Channels.Binding GetDefaultBinding()
    {
        return UtilitiesManagerClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IUtilitiesManager);
    }

    private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
    {
        return UtilitiesManagerClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IUtilitiesManager);
    }

    public enum EndpointConfiguration
    {
        BasicHttpBinding_IUtilitiesManager,
    }

    //public void Dispose()
    //{
    //    (base.Channel as System.IDisposable)?.Dispose();
    //    (base.ChannelFactory as System.IDisposable)?.Dispose();
    //    (base.InnerChannel as System.IDisposable)?.Dispose();
    //}
}
